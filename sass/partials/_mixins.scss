//////////////////////////////
// MIXINS: Mixins should have arguments. Otherwise use extendables...
//////////////////////////////

// add a background to the media query indicator - dev only 
@mixin breakpoint-back {
  // Cause you can't extend silently from a media query
  line-height: 1.25em;
  padding: .25em 1em;
  margin: 0 0 .25em 0;
  background: rgba(#d00, .5);
  color: #ddd;
  z-index: 100;
  position: absolute;
  top: 1;
  left: 20px;
  @include border-radius(.5em);
  //float:left;
}

@mixin element-invisible {
  // Can't extend from a media-query so this is %element-invisible in a mixin
  // http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  @if $legacy-support-for-ie6 or $legacy-support-for-ie7 {
    // IE6, IE7 
    clip: rect(1px 1px 1px 1px); 
  }
  clip: rect(1px, 1px, 1px, 1px); 
}

@mixin background-gradient($direction: top, $start: true, $start-pos: 0 default, $mid: false, $mid-pos: 33% default, $end: false, $end-pos: 66% default, $final: false) {
  @if $end { background: $end; }
  @else { background: $start; }  
  @if $final { @include background-image(linear-gradient($direction, $start $start-pos, $mid $mid-pos, $end $end-pos, $final)); }
  @else { @include background-image(linear-gradient($direction, $start $start-pos, $mid $mid-pos, $end $end-pos)); }
}

@mixin web-font-face($font-name, $font-file-name, $font-weight: normal, $font-style: normal, $inline-fonts: false) { 
  @if $inline-fonts and $font-name {
  @include font-face(
    $font-name, 
    inline-font-files(
      "#{$font-file-name}.woff", woff, 
      "#{$font-file-name}.ttf", truetype, 
      "#{$font-file-name}.svg", svg
    ), 
    "#{$font-file-name}.eot",  
    $font-weight, 
    $font-style
  );
  }
  @else if $font-name { 
    @include font-face(
      $font-name, 
      font-files(
        "#{$font-file-name}.woff", woff, 
        "#{$font-file-name}.ttf", truetype,
        "#{$font-file-name}.svg##{$font-name}", svg
      ), 
      "#{$font-file-name}.eot", 
      $font-weight, 
      $font-style
    );
  }
}

@mixin web-font-family($font-name: false) {
  @if $font-name { font-family: $font-name; }
}

//@mixin profile($size) {
//  max-width:$size;
//  width: $size;
//  height: $size;
//  @include border-radius($size/2);
//}
 

// IE Fixin Mixins
// Based on: http://jakearchibald.github.io/sass-ie/
// For IE only CSS hacks

//$fixed-media-query: false !default; 

//@mixin respond-to($mediaquery) {
//  // If we're outputting for a fixed media query set...
//  @if $fixed-media-query {
//    // ...and if we should apply these rules...
//    @if $fixed-media-query == $mediaquery {
//      // ...output the content the user gave us.
//      @content;
//    }
//  }
//  @else {
//    // Otherwise, output it using a regular media query
//    @include respond-to(quote($mediaquery)) {
//      @content;
//    }
//  }
//}

@mixin opacitIE($opacity) {
  // Could be extended for other even older browsers if needed http://css-tricks.com/css-transparency-settings-for-all-broswers/
  @if $legacy-support-for-ie6 or $legacy-support-for-ie7 {
    @include has-layout-zoom;  // trigger hasLayout
  }
  filter: unquote("alpha(opacity=#{round($opacity * 100)})");
}